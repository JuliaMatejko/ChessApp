@model ChessApp.Models.Chess.Game
@{
    var ids = new Dictionary<string, string>
{
                    { "firstPlayerId", @Model.FirstPlayerID },
                    { "secondPlayerId", @Model.SecondPlayerID }
        };


}

<!--Checkmate-->
<partial name="Checkmate" />
<!--Player resigned-->
<partial name="PlayerResigned" />
<!--Stalemate-->
<partial name="Stalemate" />
<!--Players agreed to draw-->
<partial name="PlayersAgreedToDraw" />
<div class="container-fluid p-0">
    <div class="row no-gutters">
        <!--big screens-->
        <div class="players-area col p-2 container-fluid d-none d-xl-block">
            <div class="row no-gutters flex-column h-100">
                <div class="player-two-area col d-flex flex-column justify-content-between align-items-center">
                    <div class="player-two-avatar-area m-4 mb-5 mt-5 d-flex align-items-center">
                        <div class="player-img black rounded d-inline-block"></div>
                        <p class="m-4" style="font-weight:600;"> @Html.DisplayFor(model => model.SecondPlayerID)</p>
                    </div>
                    <div class="clock player-two-clock rounded"><span>00:00</span></div>
                </div>
                <div class="player-one-area col d-flex flex-column justify-content-between align-items-center">
                    <div class="clock player-one-clock rounded"><span>00:00</span></div>
                    <div class="player-one-avatar-area m-4 mb-5 mt-5 d-flex align-items-center">
                        <div class="player-img white rounded d-inline-block"></div>
                        <p class="m-4" style="font-weight:600;"> @Html.DisplayFor(model => model.FirstPlayerID)</p>
                    </div>
                </div>
            </div>
        </div>
        <!-- small screens-->
        <div class="player-two-area-sm col-12 d-xl-none pt-2 pb-2 pl-3 pr-3 container-fluid d-flex justify-content-between">
            <div class="row flex-column">
                <div class="col d-flex">
                    <div class="player-img black rounded d-inline-block" style="width:40px;height:40px;"></div>
                    <p class="ml-2" style="font-weight:600;"> @Html.DisplayFor(model => model.SecondPlayerID)</p>
                </div>
            </div>
            <div class="clock player-two-clock rounded"><span>00:00</span></div>
        </div>
        <!--board-->
        <div id="board-1" class="col-10 col-xl-12 container-fluid p-0 board">
            <svg viewBox="0 0 100 100" class="coords">
                <text x="0.75" y="3.5" font-size="2.8" class="coord-light">8</text>
                <text x="0.75" y="15.75" font-size="2.8" class="coord-dark">7</text>
                <text x="0.75" y="28.25" font-size="2.8" class="coord-light">6</text>
                <text x="0.75" y="40.75" font-size="2.8" class="coord-dark">5</text>
                <text x="0.75" y="53.25" font-size="2.8" class="coord-light">4</text>
                <text x="0.75" y="65.75" font-size="2.8" class="coord-dark">3</text>
                <text x="0.75" y="78.25" font-size="2.8" class="coord-light">2</text>
                <text x="0.75" y="90.75" font-size="2.8" class="coord-dark">1</text>
                <text x="10" y="99" font-size="2.8" class="coord-dark">a</text>
                <text x="22.5" y="99" font-size="2.8" class="coord-light">b</text>
                <text x="35" y="99" font-size="2.8" class="coord-dark">c</text>
                <text x="47.5" y="99" font-size="2.8" class="coord-light">d</text>
                <text x="60" y="99" font-size="2.8" class="coord-dark">e</text>
                <text x="72.5" y="99" font-size="2.8" class="coord-light">f</text>
                <text x="85" y="99" font-size="2.8" class="coord-dark">g</text>
                <text x="97.5" y="99" font-size="2.8" class="coord-light">h</text>
            </svg>
            <!-- to do: generete this code-->
            <!--Effects-->
            <!--
            <div class="square-h1 highlight"></div>
            <div class="square-g1 highlight"></div>
            <div class="square-a3 highlight-danger"></div>
            <div class="square-a4 highlight-danger"></div>
            <div class="square-a5 hover-square"></div>
            <div class="square-a6 hover-square"></div>-->
            @foreach (var boardsFieldColumn in Model.Chessboard.BoardsFieldColumns)
            {
                foreach (var field in boardsFieldColumn.FieldColumn.Fields)
                {
                    @if (field.Content != null)
                    {
                        @switch (field.Content.PieceNameID) //TO DO: could be done better
                        {
                            case "pw":
                                <div id="@field.Position.Name" class="piece pw"></div>
                                break;
                            case "pb":
                                <div id="@field.Position.Name" class="piece pb"></div>
                                break;
                            case "rw":
                                <div id="@field.Position.Name" class="piece rw"></div>
                                break;
                            case "rb":
                                <div id="@field.Position.Name" class="piece rb"></div>
                                break;
                            case "nw":
                                <div id="@field.Position.Name" class="piece nw"></div>
                                break;
                            case "nb":
                                <div id="@field.Position.Name" class="piece nb"></div>
                                break;
                            case "bw":
                                <div id="@field.Position.Name" class="piece bw"></div>
                                break;
                            case "bb":
                                <div id="@field.Position.Name" class="piece bb"></div>
                                break;
                            case "qw":
                                <div id="@field.Position.Name" class="piece qw"></div>
                                break;
                            case "qb":
                                <div id="@field.Position.Name" class="piece qb"></div>
                                break;
                            case "kw":
                                <div id="@field.Position.Name" class="piece kw"></div>
                                break;
                            case "kb":
                                <div id="@field.Position.Name" class="piece kb"></div>
                                break;
                        }
                    }
                    else
                    {
                        <div id="@field.Position.Name" class=""></div>
                    }
                }
            }
        </div>
        <!-- small screens-->
        <div class="player-one-area-sm col-12 d-xl-none pt-2 pb-2 pl-3 pr-3 container-fluid d-flex justify-content-between">
            <div class="row flex-column">
                <div class="col d-flex">
                    <div class="player-img white rounded d-inline-block" style="width:40px;height:40px;"></div>
                    <p class="ml-2" style="font-weight:600;"> @Html.DisplayFor(model => model.FirstPlayerID)</p>
                </div>
            </div>
            <div class="clock player-one-clock rounded"><span>00:00</span></div>
        </div>
        <!--buttons and moves-->
        <div class="buttons-and-moves-area col p-2 container-fluid">
            <div class="row no-gutters flex-column h-100">
                <div class="button-area col-auto d-flex flex-column justify-content-start align-items-center pb-2">
                    <button type="button" onclick="flipTheBoard()" class="btn btn-light border-secondary m-2 d-block" style="width: 180px; height: 40px; font-weight: 600;">Flip the board <i class="fas fa-sync-alt"></i></button>
                    <button type="button" class="btn btn-primary m-2 d-block" style="width: 180px; height: 40px; font-weight: 600;">Offer A Draw <i class="fas fa-question"></i> <i class="fas fa-handshake"></i></button>
                    <button type="button" class="btn btn-secondary m-2 d-block" style="width: 180px; height: 40px; font-weight: 600;">Resign <i class="fas fa-flag"></i></button>
                </div>
                <div class="move-table-area col p-2 p-xl-5">
                    <div class="table-scrollable rounded">
                        <table class="table table-dark table-sm table-striped">
                            <thead class="thead-dark">
                                <tr>
                                    <th scope="col">move</th>
                                    <th scope="col"> @Html.DisplayFor(model => model.FirstPlayerID)</th>
                                    <th scope="col"> @Html.DisplayFor(model => model.SecondPlayerID)</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <th scope="row">1.</th>
                                    <td>e3</td>
                                    <td>e4</td>
                                </tr>
                                <tr>
                                    <th scope="row">2.</th>
                                    <td>e5</td>
                                    <td>d4</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>



